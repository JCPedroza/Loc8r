#!/usr/bin/env node

const app = require('../app')
const debug = require('debug')('loc8r:server')
const http = require('http')

const ERRORS = {
  EACCES: ' requires elevated privileges',
  EADDRINUSE: ' is already in use'
}

const normalizePort = (val) => {
  const port = parseInt(val, 10)

  if (isNaN(port)) {
    return val
  }

  if (port >= 0) {
    return port
  }

  return false
}

const errorLogExit = (error) => {
  const bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port

  if (error.code) {
    console.error(`${bind}${ERRORS[error.code]}`)
    process.exit(1)
  }
}

const onError = (error) => {
  if (error.syscall !== 'listen') {
    throw error
  }
  errorLogExit(error)
}

const onListening = () => {
  const addr = server.address()
  const bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port
  debug('Listening on ' + bind)
}

const port = normalizePort(process.env.PORT || '3000')
app.set('port', port)

const server = http.createServer(app)
server.listen(port)
server.on('error', onError)
server.on('listening', onListening)
